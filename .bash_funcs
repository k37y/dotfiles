update-repo() {
    for source in "$@"; do
        sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/${source}" \
        -o Dir::Etc::sourceparts="-" -o APT::Get::List-Cleanup="0"    
    done
}

alarm() {
sleep $1; while :; do paplay /usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga; read -t 0.01 -n 1; if [ $? = 0 ]; then break; fi; done
}

byzanz() {
notify-send "byzanz" "starts in 10 seconds";
byzanz-record -c --verbose --delay=10 --duration=1000 --x=0 --y=24 --width=724 --height=463 $HOME/Pictures/"$(date)".gif
}

#youtube-dl
mpthree() {
youtube-dl -f 140 "ytsearch:$1 $2 $3 $4 $5 $6 $7 $8 $9"
}

LinuxVoice_Magazine_Downloader () {
cd /home/kevy/Learn\ Linux/LinuxVoice/
for i in {001..050} 
do wget --read-timeout=5 --tries=0 -c https://www.linuxvoice.com/issues/$i/Linux-Voice-Issue-$i.pdf
done
cd
}

MagPi_Magazine_Downloader () {
cd /home/kevy/Learn\ Linux/MagPi/
wget -c -r -A.pdf -np -nd -l1 -erobots=off https://www.raspberrypi.org/magpi-issues
cd
}

clean-history () {
awk '!seen[$0]++' .bash_history > history && rm -v .bash_history && mv -v history .bash_history
}

cfu () { wget -qO - http://www.commandlinefu.com/commands/random/plaintext | \
sed -n '/AD/!p' | sed -n '/commandlinefu.com/!p' | tee ~/.cfu; 
read -p "Do you want to save? (y/n) " ans
  if [ $ans == y ]; then
  cat ~/.cfu >> ~/Scripts/Useful\ Commands;
  fi
}

#HourGlass
hourglass() { trap 'tput cnorm' 0 1 2 15 RETURN;local s=$(($SECONDS +$1));(tput civis;while (($SECONDS<$s));do for f in '|' '\' '-' '/';do echo -n "$f";sleep .2s;echo -n $'\b';done;done;);}

#gif
function gif {
byzanz-record -v --duration=$1 --x=278 --y=159 --width=724 --height=460 --delay=5 byzanz.gif
}

function fetch {
while [ 0 ]; 
do wget -qO - http://www.commandlinefu.com/commands/random/plaintext | \
grep -v questions/comments | \
grep -v ScriptRock.com |  \
pv -q -L 9
sleep 1s
done
}

function gitpush {
git status
git add .
git commit -m "modified"
git push origin master
}

function autodownload {
while true; do youtube-dl -f 18 -a /home/kiosk/Videos/download -o "/home/kiosk/Videos/%(title)s.%(ext)s"; if [[ $? == 0 ]]; then exit 0; fi; done
}

function play {
mpv $(youtube-dl -v -g "$1")
}

function loop {
while true;
do $1;
if [[ $? == 0 ]]; then
break;
fi
done
}

# bypass is a function
bypass () 
{ 
    tmux new -d -s $1 "ssh $1"
}

function paste.rs() {
    local file=${1:-/dev/stdin}
    curl --data-binary @${file} https://paste.rs
}

function alpine() {
sudo podman run --rm --interactive --tty --net host --security-opt label=disable --name=alpine docker.io/alpine
}

function ubuntu() {
sudo podman run --rm --interactive --tty --net host --security-opt label=disable --name=ubuntu docker.io/ubuntu
}

function archlinux() {
sudo podman run --rm --interactive --tty --net host --security-opt label=disable --name=archlinux docker.io/archlinux
}

function vpnconnect() {
otpc | tee /tmp/otpc && echo vpn.secrets.password:$(cat ~/.local/etc/passwd | base64 -d)$(cat /tmp/otpc | grep HO | awk '{print $3}') > /tmp/passfile && nmcli connection up Pune\ \(PNQ2\) passwd-file /tmp/passfile && rm -vf /tmp/passfile /tmp/otpc
}

function termuxSend() {
scp -P 8022 "$1" user@192.168.73.254:/storage/emulated/0/Termux/
}

function ofzf() {
PROJECT=$(oc get project | sed 1d | awk '{print $1}' | fzf)
POD=$(oc get pods -o wide -o jsonpath='{range .items[*]}{.metadata.name} {.spec.nodeName}{"\n"}' -n $PROJECT | sed 1d | awk '{print $1"   "$2}' | fzf | awk '{print $1}')
CONTAINER=$(oc get pod $POD -n $PROJECT -o jsonpath='{range .spec.containers[*]}{.name}{"\n"}{end}' | fzf)

if [[ $1 == pod ]]; then

fi
if [[ $1 == "logs" ]] ; then
echo "Showing logs of $POD ..."
oc logs $POD -c $CONTAINER -n $PROJECT | less
fi
}

function clean-container-images {
sudo podman rmi $(sudo podman images -a | grep -v 'localhost/kevydotvinu' | awk 'NR>1 {print $3}') -f
podman rmi $(sudo podman images -a | grep -v 'localhost/kevydotvinu' | awk 'NR>1 {print $3}') -f
sudo podman rm $(sudo podman ps -a | awk 'NR>1 {print $1}')
podman rm $(sudo podman ps -a | awk 'NR>1 {print $1}')
}
